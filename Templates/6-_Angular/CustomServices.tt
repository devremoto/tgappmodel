<#@ template language="C#" hostSpecific="true" compilerOptions="optimize+" debug="true" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="..\main.ttinclude" #>
<#@ include file="..\ClassModel.ttinclude" #>
<#@ output extension=".txt"  #><#
//System.Diagnostics.Debugger.Launch();
var manager = TemplateFileManager.Create(this);
manager.CanOverrideExistingFile = false;
//manager.IsAutoIndentEnabled=true;


CreateDirectory($"..\\..\\..\\{webAppFullPath}services\\custom\\");	

foreach(var classModel in classSet.Classes){

		var camelCaseName = classSet.ToCamelCase(classModel.Name);
		var service = classSet.ToCamelCase(classModel.Name)+"Service";
		var controller = classSet.ToCamelCase(classModel.Name)+"Controller";
		var spacedName = classSet.ToSpacedName(classModel.Name);
		var underscoreName = classSet.ToUnderscore(classModel.Name).ToUpper();
		var parents = (classModel.Fields!=null)?classModel.Fields.Where(x=>x.IsParent):null;
		var classChild = (classModel.Fields!=null)?classModel.Fields.Where(x=>x.IsCollection):null;

#>
<#	
///////////////////////////////////////////////////////
//Service
///////////////////////////////////////////////////////
		
		manager.StartNewFile($"{webAppPath}services/custom/"+classModel.Name+".ts",webProject,"");

#>
import { Injectable } from '@angular/core';
import { HttpService } from '../services';
import { <#=classModel.Name#>Service } from '../generated/<#=classModel.Name#>Service';

@Injectable({
  providedIn: 'root',
})
export class <#=classModel.Name#>CustomService extends <#=classModel.Name#>Service {

    constructor(protected _http: HttpService) {
        super(_http);
    }  
}
<#
manager.EndBlock();
}
manager.Process(false);
#>